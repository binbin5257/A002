apply plugin: 'com.android.library'


android {
    compileSdkVersion 22
    buildToolsVersion '26.0.2'
    defaultConfig {
        multiDexEnabled false
        minSdkVersion 19
        targetSdkVersion 22
        versionCode 1
        versionName "0.1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    productFlavors {
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        //TODO  打包后有什么影响暂时不清楚，需要后续调查
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    //useLibrary 'org.apache.http.legacy'
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:cardview-v7:22.2.1'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'com.google.zxing:core:3.2.1'
    compile 'com.android.support:multidex:1.0.3'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    compile files('libs/pinyin4j-2.5.0.jar')
    //    compile 'com.droidtitan:lint-cleaner-plugin:0.3.0'
    compile files('libs/alipaySdk-20160825.jar')
    compile files('libs/android-im-sdk-1.0.0.0-SNAPSHOT.jar')
    compile 'com.contrarywind:Android-PickerView:3.2.5'
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.4'



}

apply plugin: 'maven'
def VERSION_NAME = '0.0.0.17-SNAPSHOT'
def NEXUS_USERNAME = 'admin'
def NEXUS_PASSWORD = 'admin'
def GROUP = 'leadingsoft'
def POM_ARTIFACT_ID = 'chat-core'
def RELEASE_REPOSITORY_URL = 'http://192.168.62.50/artifactory/libs-release-local'
def SNAPSHOT_REPOSITORY_URL = 'http://192.168.62.50/artifactory/libs-snapshot-local'

def isReleaseBuild() {
    return VERSION_NAME.contains("SNAPSHOT") == false
}

afterEvaluate { project ->
    uploadArchives {
        repositories {

            mavenDeployer {
                pom.groupId = GROUP
                pom.artifactId = POM_ARTIFACT_ID
                pom.version = VERSION_NAME
                repository(url: RELEASE_REPOSITORY_URL) {
                    authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
                }
                snapshotRepository(url: SNAPSHOT_REPOSITORY_URL) {
                    authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
                }
            }
        }
    }
}


